[{"E:\\burger-builder\\burger-builder\\src\\index.js":"1","E:\\burger-builder\\burger-builder\\src\\App.js":"2","E:\\burger-builder\\burger-builder\\src\\components\\Layout\\Layout.jsx":"3","E:\\burger-builder\\burger-builder\\src\\hoc\\Wrapped.js":"4","E:\\burger-builder\\burger-builder\\src\\containers\\BurgerBuilder\\BurgerBuilder.jsx":"5","E:\\burger-builder\\burger-builder\\src\\components\\Burger\\BurgerIngredient\\BurgerIngredient.jsx":"6","E:\\burger-builder\\burger-builder\\src\\components\\Burger\\Burger.jsx":"7","E:\\burger-builder\\burger-builder\\src\\components\\Burger\\BuildControls\\BuildControls.jsx":"8","E:\\burger-builder\\burger-builder\\src\\components\\Burger\\BuildControls\\BuildControl\\BuildControl.jsx":"9"},{"size":219,"mtime":1611069935091,"results":"10","hashOfConfig":"11"},{"size":257,"mtime":1610988566857,"results":"12","hashOfConfig":"11"},{"size":334,"mtime":1610988843164,"results":"13","hashOfConfig":"11"},{"size":66,"mtime":1610987350274,"results":"14","hashOfConfig":"11"},{"size":2043,"mtime":1611070928636,"results":"15","hashOfConfig":"11"},{"size":1045,"mtime":1611044831116,"results":"16","hashOfConfig":"11"},{"size":740,"mtime":1611045235428,"results":"17","hashOfConfig":"11"},{"size":854,"mtime":1611070816034,"results":"18","hashOfConfig":"11"},{"size":441,"mtime":1611070831876,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o4a8pl",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\burger-builder\\burger-builder\\src\\index.js",[],"E:\\burger-builder\\burger-builder\\src\\App.js",[],["40","41"],"E:\\burger-builder\\burger-builder\\src\\components\\Layout\\Layout.jsx",[],"E:\\burger-builder\\burger-builder\\src\\hoc\\Wrapped.js",[],"E:\\burger-builder\\burger-builder\\src\\containers\\BurgerBuilder\\BurgerBuilder.jsx",["42"],"E:\\burger-builder\\burger-builder\\src\\components\\Burger\\BurgerIngredient\\BurgerIngredient.jsx",["43"],"import React from \"react\";\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from \"prop-types\";\r\nfunction BurgerIngredient(props) {\r\n  let ingredient = null;\r\n  switch(props.type) {\r\n    case \"bread-bottom\":\r\n      ingredient = <div className={classes.BreadBottom}></div>;\r\n      break;\r\n    case \"bread-top\":\r\n      ingredient = (\r\n        <div className={classes.BreadTop}>\r\n          <div className={classes.Seeds1}></div>\r\n          <div className={classes.Seeds2}></div>\r\n        </div>\r\n      );\r\n      break;\r\n    case \"Meat\":\r\n      ingredient = <div className={classes.Meat}></div>;\r\n      break;\r\n    case \"Bacon\":\r\n      ingredient = <div className={classes.Bacon}></div>;\r\n      break;\r\n    case \"Salad\":\r\n      ingredient = <div className={classes.Salad}></div>;\r\n      break;\r\n    case \"Cheese\":\r\n      ingredient = <div className={classes.Cheese}></div>;\r\n      break;\r\n  }\r\n  return ingredient;\r\n}\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\nexport default BurgerIngredient;\r\n","E:\\burger-builder\\burger-builder\\src\\components\\Burger\\Burger.jsx",[],"E:\\burger-builder\\burger-builder\\src\\components\\Burger\\BuildControls\\BuildControls.jsx",[],"E:\\burger-builder\\burger-builder\\src\\components\\Burger\\BuildControls\\BuildControl\\BuildControl.jsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":39,"column":30,"nodeType":"50","messageId":"51","endLine":39,"endColumn":32},{"ruleId":"52","severity":1,"message":"53","line":6,"column":3,"nodeType":"54","messageId":"55","endLine":30,"endColumn":4},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]